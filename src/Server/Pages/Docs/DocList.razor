@inject Service<Doc> DocService
@inject IMapper Mapper
@inject DocEvents DocEvents

<div class="mt-4">
    <h2 class="mt-3">Documents</h2>
    <ul class="list-group">
        @foreach (var item in docs)
        {
            <li class="list-group-item">
                <a href="docs/@item.Url">
                    @item.Title
                </a>
            </li>
        }
    </ul>
</div>

@code {
    private List<DocDto> docs = new List<DocDto>();

    protected override async Task OnInitializedAsync()
    {
        docs = (await DocService.GetAll())
            .Select(Mapper.Map<DocDto>)
            .ToList();

        DocEvents.OnNewDoc += OnNewDoc;
        DocEvents.OnUpdatedDoc += OnUpdateDoc;
        DocEvents.OnDeletedDoc += OnDeletedDoc;
    }

    private async void OnNewDoc(DocDto dto)
    {
        docs.Add(dto);
        await InvokeAsync(StateHasChanged);
    }

    private async void OnUpdateDoc(DocDto dto)
    {
        docs = docs
            .Select(x => x.Id == dto.Id ? dto : x)
            .ToList();

        await InvokeAsync(StateHasChanged);
    }

    private async void OnDeletedDoc(DocDto dto)
    {
        docs = docs
            .Where(x => x.Id != dto.Id)
            .ToList();

        await InvokeAsync(StateHasChanged);
    }
}